from time import sleep
import asyncio
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)
from datetime import datetime
from core.api import Scraper
from core.config import settings

bot = Bot(settings.TOKEN)
dp = Dispatcher(bot, loop=asyncio.get_event_loop())

scraper = Scraper()


@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer(
        """
             *–í—ñ—Ç–∞—é!*üëã
             
–¶–µ–π –±–æ—Ç –ø–æ–≤—ñ–¥–æ–º–ª—è—î –ø—Ä–æ –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É –≤–∞—à–æ—ó –∑–∞—è–≤–∫–∏ –Ω–∞ _passport.mfa.gov.ua_, —â–æ–± –ø–æ—á–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –±–æ—Ç–æ–º –Ω–∞–¥—ñ—à–ª–∏ —Å–≤—ñ–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä.
–î–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è –≤—Å—ñ–º–∞ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å /cabinet
        
–í–∞–∂–ª–∏–≤–æ –∑–∞–∑–Ω–∞—á–∏—Ç–∏, —â–æ —Ü–µ–π –±–æ—Ç *–ù–ï –ü–û–í'–Ø–ó–ê–ù–ò–ô* –∑ –ú–ó–° –£–∫—Ä–∞—ó–Ω–∏, —ñ –Ω–µ –Ω–µ—Å–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞ –≤—ñ—Ä–æ–≥—ñ–¥–Ω—ñ—Å—Ç—å —á–∏ —Å–≤–æ—î—á–∞—Å–Ω—ñ—Å—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó, –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø–æ—è—Å–Ω–µ–Ω–Ω—è –Ω–∞–¥—ñ—à–ª—ñ—Ç—å /policy
        """,
        parse_mode="Markdown",
    )


@dp.message_handler(commands=["policy"])
async def policy(message: types.Message):
    await message.answer(
        """
        *–ó–∞–≥–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è*
–ë–æ—Ç —Ä–æ–∑—Ä–æ–±–ª–µ–Ω–∏–π –¥–ª—è —Å–ø—Ä–æ—â–µ–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å—É –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑–∞—è–≤–∫–∏ –Ω–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ø–∞—Å–ø–æ—Ä—Ç—É –Ω–∞ —Å–∞–π—Ç—ñ _passport.mfa.gov.ua_ –Ω–µ–∑–∞–ª–µ–∂–Ω–∏–º —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–æ–º, —ñ –Ω–µ –ø–æ–≤'—è–∑–∞–Ω–∏–º –∑ –ú–ó–° –£–∫—Ä–∞—ó–Ω–∏.
–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π –±–æ—Ç–∞ –Ω–µ –∑–æ–±–æ–≤'—è–∑—É—î –≤–∞—Å –Ω—ñ –¥–æ —á–æ–≥–æ, —ñ –Ω–µ –Ω–µ—Å–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞ –≤—ñ—Ä–æ–≥—ñ–¥–Ω—ñ—Å—Ç—å —á–∏ —Å–≤–æ—î—á–∞—Å–Ω—ñ—Å—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –Ω–∞ –≤–∞—à —Å—Ç—Ä–∞—Ö —Ç–∞ —Ä–∏–∑–∏–∫.

*–ö–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è*
–§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–æ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑–∞—è–≤–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à–µ –ø—ñ—Å–ª—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–Ω—è –±–æ—Ç—É –≤–∞—à–æ–≥–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞, —è–∫–∏–π –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∑–∞—è–≤–∫–∏ –Ω–∞ —Å–∞–π—Ç—ñ _passport.mfa.gov.ua_ –Ω—ñ—è–∫–∏–º —á–∏–Ω–æ–º –Ω–µ –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è, —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ª–∏—à–µ –¥–ª—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–Ω—è —Ü—å–≥–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—É –Ω–∞ –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π –≤–µ–±—Å–∞–π—Ç.
–í—Å—ñ —Ä–µ—à—Ç–∞ —Ñ—É–Ω–∫—Ü—ñ–π –¥–æ—Å—Ç—É–ø–Ω—ñ (–∫–∞–±—ñ–Ω–µ—Ç, —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É) - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –±–∞–∑—É –¥–∞–Ω–∏—Ö —Ç–∞ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å –≤–∞—à Telegram ID, –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –°–µ—Å—ñ—ó _passport.mfa.gov.ua_, —Ç–∞ –≤—Å—ñ —Å—Ç–∞—Ç—É—Å–∏ –∑–∞—è–≤–∫–∏.
–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ü–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î –≤–∞—à—É –∑–≥–æ–¥—É –Ω–∞ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ü–∏—Ö –¥–∞–Ω–∏—Ö.

*–Ø–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∑—ñ–±—Ä–∞–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è*
–í–∞—à Telegram ID –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –≤–∞—Å –≤ —Å–∏—Å—Ç–µ–º—ñ, —ñ –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤–∞–º —Å–ø–æ–≤—ñ—â–µ–Ω—å –ø—Ä–æ –∑–º—ñ–Ω—É —Å—Ç–∞—Ç—É—Å—É –∑–∞—è–≤–∫–∏, –∞ —Ç–∞–∫–æ–∂ –ø—Ä–∏–≤ º—è–∑–∫–∏ —Å–µ—Å—ñ—ó.
–í–∞—à —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Å–µ—Å—ñ—ó –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑–∞—è–≤–∫–∏ —à–ª—è—Ö–æ–º –∑–∞–ø–∏—Ç—É –Ω–∞ –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π –≤–µ–±—Å–∞–π—Ç _passport.mfa.gov.ua_.
–í—Å—ñ —Å—Ç–∞—Ç—É—Å–∏ –∑–∞—è–≤–∫–∏ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –¥–ª—è –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó –∑–º—ñ–Ω —Å—Ç–∞—Ç—É—Å—É –∑–∞—è–≤–∫–∏, —Ç–∞ –∑–≤—ñ—Ä–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö —Å—Ç–∞—Ç—É—Å—ñ–≤ –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–º–∏ –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è –∑–º—ñ–Ω.

*–í–∏–¥–∞–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö*
–í–∏ –º–æ–∂–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ –¥–∞–Ω—ñ, –ø–æ–≤'—è–∑–∞–Ω—ñ –∑ –≤–∞—à–∏–º Telegram ID, –Ω–∞–¥—ñ—Å–ª–∞–≤—à–∏ /delete, –∞–±–æ –∑–≤'—è–∑–∞–≤—à–∏—Å—å –∑ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–æ–º  @operatorSilence. 

*Source Code*
–ë–æ—Ç –ø–æ—à–∏—Ä—é—î—Ç—å—Å—è –∑ –≤—ñ–¥–∫—Ä–∏—Ç–∏–º –≤–∏—Ö—ñ–¥–Ω–∏–º –∫–æ–¥–æ–º, –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –π–æ–≥–æ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º:
https://github.com/denver-code/passport-status-bot
—Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≤—Å–µ –≤–∏—â–µ–∑–∞–∑–Ω–∞—á–µ–Ω–µ, –∞–±–æ –∂ –ø—ñ–¥–Ω—è—Ç–∏ —Å–≤—ñ–π –≤–ª–∞—Å–Ω–∏–π –±–æ—Ç –∑ –≤–ª–∞—Å–Ω–∏–º —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª–æ–º.
        """,
        parse_mode="Markdown",
    )


@dp.message_handler(regexp=r"^\d{7}$")
async def custom_check(message: types.Message):
    _message = await message.answer("–ó–∞—á–µ–∫–∞–π—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞, —Ç—Ä–∏–≤–∞—î –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞...")
    await message.answer_chat_action("typing")

    status = scraper.check(message.text, retrive_all=True)
    if not status:
        await _message.edit_text("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
        return

    _msg_text = f"–°—Ç–∞—Ç—É—Å–∏ –∑–∞—è–≤–∫–∏ *#{message.text}:*\n\n"

    for i, s in enumerate(status):
        _date = datetime.fromtimestamp(int(s.get("date")) / 1000).strftime(
            "%Y-%m-%d %H:%M"
        )
        _msg_text += f"{i+1}. *{s.get('status')}* \n_{_date}_\n\n"

    await _message.edit_text(_msg_text, parse_mode="Markdown")


# @dp.message_handler(commands=["cabinet"])
# async def cabinet(message: types.Message):
#     await message.answer(
#         """
#         *–í–∞—à –∫–∞–±—ñ–Ω–µ—Ç:*
#         """
#     )


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
