name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup & Install
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-poetry.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache Poetry artifacts
        id: cache-poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/artifacts
          key: poetry-artifacts-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: poetry install --with dev

  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install poetry

      - name: Cache Poetry artifacts
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/artifacts
          key: poetry-artifacts-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies (skip if cached)
        run: poetry install --with dev

      - run: poetry run pytest --maxfail=1 --disable-warnings -q

  type-check:
    name: Mypy Type Checking
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install poetry

      - name: Cache Poetry artifacts
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/artifacts
          key: poetry-artifacts-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies (skip if cached)
        run: poetry install --with dev

      - run: poetry run mypy bot

  lint:
    name: Ruff Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install poetry

      - name: Cache Poetry artifacts
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/artifacts
          key: poetry-artifacts-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies (skip if cached)
        run: poetry install --with dev

      - run: poetry run ruff check bot

  security:
    name: Bandit Security Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install poetry

      - name: Cache Poetry artifacts
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/artifacts
          key: poetry-artifacts-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies (skip if cached)
        run: poetry install --with dev

      - run: poetry run bandit -r bot

  pre-commit:
    name: Pre-commit Hooks
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install poetry

      - name: Cache Poetry artifacts
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/artifacts
          key: poetry-artifacts-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies (skip if cached)
        run: poetry install --with dev

      - run: poetry run pre-commit run --all-files
