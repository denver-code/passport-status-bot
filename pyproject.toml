[project]
name = "mfa-passport-bot"
version = "0.2.1"
description = "Telegram bot for tracking MFA passport application status"
authors = [
  { name = "Ihor Savenko", email = "csigorek@gmail.com" },
  { name = "Oleksandr Shevchenko", email = "mr.AlexZT@gmail.com" }
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.12"

[tool.poetry.dependencies]
python = ">=3.12,<3.14"
pydantic = "^2.11.7"
pydantic-settings = "^2.10.1"
beanie = "^2.0.0"
motor = "^3.7.1"
fake-headers = "^1.0.2"
aiogram = "^3.21.0"
apscheduler = "^3.11.0"
pillow = "^11.3.0"
qreader = "^3.16"
matplotlib = "^3.10.5"
aiohttp = "^3.12.15"
playwright = "^1.54.0"
requests = "^2.32.4"
cloudscraper = { git = "https://github.com/VeNoMouS/cloudscraper.git", tag = "3.0.0" }

[project.scripts]
bot = "bot.__main__:main"

[tool.poetry]
packages = [
    { include = "bot" }
]

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
pytest = "^8.4.1"
pytest-asyncio = "^1.1.0"
pytest-cov = "^6.2.1"
mypy = "^1.17.1"
ruff = "^0.12.8"
bandit = "^1.8.6"
pre-commit = "^4.3.0"
types-requests = "^2.32.4.20250809"
types-psutil = "^7.0.0.20250801"
opencv-python = "^4.12.0.88"
numpy = "^2.2.6"

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "B",
    "C4",
    "UP",
]
ignore = ["E501", "B008", "B904"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = false
strict_equality = true

# Loosen checks for test files and allow missing third-party stubs used only at runtime
exclude = [
    "^tests/",
]

[[tool.mypy.overrides]]
module = [
    "qreader.*",
    "fake_headers.*",
    "cloudscraper.*",
    "aiogram.*",
    "beanie.*",
    "motor.*",
    "pymongo.*",
    "aiohttp.*",
    "playwright.*",
    "matplotlib.*",
    "PIL.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=bot --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.bandit]
skips = ["B101"]
exclude_dirs = ["tests"]

[tool.coverage.run]
source = ["bot"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[[tool.mypy.overrides]]
module = ["cv2.*", "apscheduler.*"]
ignore_missing_imports = true
